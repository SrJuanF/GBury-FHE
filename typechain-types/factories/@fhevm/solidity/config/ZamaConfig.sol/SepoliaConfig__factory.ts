/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  SepoliaConfig,
  SepoliaConfigInterface,
} from "../../../../../@fhevm/solidity/config/ZamaConfig.sol/SepoliaConfig";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x6080604052346101925760006060610015610197565b828152826020820152826040820152015261002e610197565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d595806020830152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9182604082015273bc91f3dad1a5f19f8390c400196e58073b6a0bc4938491015260018060a01b0319937fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60090858254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60190848254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60290838254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea603908282541617905573a02cda4ca3a71d7c46997716f4283aa851c288127f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0091825416179055604051603a90816101cd8239f35b600080fd5b60405190608082016001600160401b038111838210176101b657604052565b634e487b7160e01b600052604160045260246000fdfe600080fdfea2646970667358221220409caa62aaecc0ee2da8e10ad9f0a232e86a1e1d2f855763aa9585de33680cef64736f6c63430008180033";

type SepoliaConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SepoliaConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SepoliaConfig__factory extends ContractFactory {
  constructor(...args: SepoliaConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SepoliaConfig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SepoliaConfig__factory {
    return super.connect(runner) as SepoliaConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SepoliaConfigInterface {
    return new Interface(_abi) as SepoliaConfigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SepoliaConfig {
    return new Contract(address, _abi, runner) as unknown as SepoliaConfig;
  }
}
