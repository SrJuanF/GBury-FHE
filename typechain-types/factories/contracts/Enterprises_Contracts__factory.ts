/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Enterprises_Contracts,
  Enterprises_ContractsInterface,
} from "../../contracts/Enterprises_Contracts";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractDataEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRequestId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "contractId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "typeDoc",
        type: "string",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr1",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr2",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr3",
        type: "address",
      },
      {
        internalType: "address",
        name: "addr4",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "CustomCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "typeDoc",
        type: "string",
      },
      {
        internalType: "externalEaddress",
        name: "addr1",
        type: "bytes32",
      },
      {
        internalType: "externalEaddress",
        name: "addr2",
        type: "bytes32",
      },
      {
        internalType: "externalEaddress",
        name: "addr3",
        type: "bytes32",
      },
      {
        internalType: "externalEaddress",
        name: "addr4",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
    ],
    name: "createContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "contractId",
        type: "uint64",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "euint64",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "typeDoc",
        type: "string",
      },
      {
        internalType: "euint64",
        name: "createdAt",
        type: "bytes32",
      },
      {
        internalType: "euint64",
        name: "updatedAt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hashdoc",
        type: "bytes32",
      },
      {
        internalType: "ebool",
        name: "isActive",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "requiredSignatures",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "currentSignatures",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "currentSignaturesRetreated",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractCounter",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "contractId",
        type: "uint64",
      },
    ],
    name: "getContractSigners",
    outputs: [
      {
        components: [
          {
            internalType: "eaddress",
            name: "signer",
            type: "bytes32",
          },
          {
            internalType: "ebool",
            name: "hasSigned",
            type: "bytes32",
          },
          {
            internalType: "ebool",
            name: "retreated",
            type: "bytes32",
          },
        ],
        internalType: "struct Enterprises_Contracts.Signer[4]",
        name: "",
        type: "tuple[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRequest",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "contractId",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isDecryptionPending",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "latestRequestId",
            type: "uint256",
          },
        ],
        internalType: "struct Enterprises_Contracts.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerContracts",
    outputs: [
      {
        internalType: "euint64[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "contractId",
        type: "uint64",
      },
    ],
    name: "retreatContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "contractId",
        type: "uint64",
      },
    ],
    name: "signContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346101a857600060606100156101ad565b828152826020820152826040820152015261002e6101ad565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d595806020830152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9182604082015273bc91f3dad1a5f19f8390c400196e58073b6a0bc4938491015260018060a01b0319937fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60090858254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60190848254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60290838254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea603908282541617905573a02cda4ca3a71d7c46997716f4283aa851c288127f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0091825416179055600160005560018060401b0319600154166001556040516124619081620001e38239f35b600080fd5b60405190608082016001600160401b038111838210176101cc57604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806305a9b786146100a75780632f7c1d34146100a257806332a8d8731461009d5780635d35b9b01461009857806365ab457e146100935780636e547cd81461008e5780639aa91a2514610089578063c48c3fbd146100845763fa3a37001461007f57600080fd5b610926565b610845565b61076d565b6106f7565b610694565b6105fc565b610502565b610213565b3461013d576100c56100c06100bb36610142565b6109ff565b610b61565b6100d66100d282516110a4565b1590565b61012b578051610127602083015192604081015190606081015160a082015160c083015160e0840151906101008501519261014086015194610180610160880151970151976040519b8c9b8c6101a4565b0390f35b604051637c8856b760e01b8152600490fd5b600080fd5b602090600319011261013d576004356001600160401b038116810361013d5790565b919082519283825260005b848110610190575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161016f565b97949b9a999693906101409996936101d26101ee948b6101e0946020610160928392815201528c0190610164565b908a820360408c0152610164565b9088820360608a0152610164565b99608087015260a086015260c085015260e08401526101008301526101208201520152565b3461013d5761022136610142565b610229611123565b610232816109ff565b61023f6100d282546110a4565b61012b5761024c33611b24565b9061025682611146565b5061025f611b7a565b6009820192601683019160005b60048110610304576101276102ea88886102d1896102c96102b48b6102a761029c6001600160401b034216611c26565b806006870155611146565b50546015840154906112b6565b60086102be611d21565b930192835491611e7c565b809155611146565b5080546003820154600683015491926009015492611303565b6102f46001600055565b6040519081529081906020820190565b806103aa6103a261039b8961038b6103298961032260019985610c1f565b5054611150565b6103838761034f61033a8287610c1f565b50936103498c80960154611e2d565b9061117f565b9461037061035b611d21565b856103668585610c1f565b5001549088611e7c565b8461037b8484610c1f565b500155610c1f565b500154611146565b5086610395611bd0565b91611e7c565b875461122f565b808755611146565b500161026c565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176103e257604052565b6103b1565b6001600160401b0381116103e257604052565b608081019081106001600160401b038211176103e257604052565b90601f801991011681019081106001600160401b038211176103e257604052565b604051906101a082018281106001600160401b038211176103e257604052565b60405190610463826103fa565b565b6001600160401b0381116103e257601f01601f191660200190565b92919261048c82610465565b9161049a6040519384610415565b82948184528183011161013d578281602093846000960137010152565b9080601f8301121561013d578160206104d293359101610480565b90565b9181601f8401121561013d578235916001600160401b03831161013d576020838186019501011161013d57565b3461013d5761012036600319011261013d576001600160401b0360243581811161013d576105349036906004016104b7565b60443582811161013d5761054c9036906004016104b7565b60643583811161013d576105649036906004016104b7565b916101043593841161013d5761058161059c9436906004016104d5565b93909260e4359260c4359260a4359260843592600435610c38565b604080519283526001600160401b0391909116602083015290f35b610180810192916000915b600483106105cf57505050565b600190606083519182518152602092838101518483015260408091015190820152019201920191906105c2565b3461013d5761060a36610142565b604051610616816103fa565b60005b6080811061067457826001600160401b038116600052600260205261064d6100d26106476040600020610b61565b516110a4565b61012b576106686009610662610127936109ff565b01610af5565b604051918291826105b7565b60209061067f610ddf565b8184015201610619565b600091031261013d57565b3461013d57600036600319011261013d5760206001600160401b0360015416604051908152f35b602090602060408183019282815285518094520193019160005b8281106106e3575050505090565b8351855293810193928101926001016106d5565b3461013d5760008060031936011261076a5733815260206003602052604082209160405180926020855492838152019483526020832092905b828210610753576101278561074781890382610415565b604051918291826106bb565b835486529485019460019384019390910190610730565b80fd5b3461013d57600036600319011261013d57610786610ddf565b506060604051610795816103c7565b600454906001600160401b0382169182825260ff602083019160401c1615158152604060055492019182526040519283525115156020830152516040820152f35b602435906001600160a01b038216820361013d57565b604435906001600160a01b038216820361013d57565b606435906001600160a01b038216820361013d57565b608435906001600160a01b038216820361013d57565b6001600160401b0381116103e25760051b60200190565b3461013d5760c036600319011261013d5761085e6107d6565b6108666107ec565b61086e610802565b610876610818565b9060a435926001600160401b039485851161013d573660238601121561013d5784600401359460246108a78761082e565b966108b56040519889610415565b808852602098602460208a019260051b8501019336851161013d5760248101925b8584106108ef576108ed8b8b8b8b8b600435610e6c565b005b833583811161013d5782013660438201121561013d578c9161091b8392369060448a8201359101610480565b8152019301926108d6565b3461013d5761093436610142565b61093c611123565b610945816109ff565b6109526100d282546110a4565b61012b5761095f33611b24565b9061096982611146565b50610972611b7a565b6009820192601783019160005b600481106109b9576101276102ea88886102d1896102c96109af8b6102a761029c6001600160401b034216611c26565b60086102be611cd2565b806109f86103a261039b8961038b6109d78961032260019985610c1f565b6103838761034f6109e88287610c1f565b5093610349600280960154611e2d565b500161097f565b6001600160401b03166000526002602052604060002090565b90600182811c92168015610a48575b6020831014610a3257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610a27565b90604051918260008254610a6581610a18565b90818452602094600191600181169081600014610ad35750600114610a94575b50505061046392500383610415565b600090815285812095935091905b818310610abb5750506104639350820101388080610a85565b85548884018501529485019487945091830191610aa2565b9250505061046394925060ff191682840152151560051b820101388080610a85565b9060409160405192608084018481106001600160401b038211176103e257604052600090845b60048310610b295750505050565b6003600191835190610b3a826103c7565b86548252838701549160209283820152600288015486820152815201940192019192610b1b565b906017610b6c610436565b9280548452610b7d60018201610a52565b6020850152610b8e60028201610a52565b6040850152610b9f60038201610a52565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501526008810154610100850152610be360098201610af5565b610120850152601581015461014085015260168101546101608501520154610180830152565b634e487b7160e01b600052603260045260246000fd5b906004811015610c33576003020190600090565b610c09565b9399989497909295969199610c4b611123565b8351158015610da3575b8015610d9a575b610d8857610c6b368784610480565b610c74916113a4565b97610c80368784610480565b610c89916113a4565b96610c95368784610480565b610c9e916113a4565b943690610caa92610480565b610cb3916113a4565b93610cbd87611146565b50610cc786611146565b50610cd184611146565b50610cdb85611146565b506001546001600160401b0316610cf190610dc2565b610d11906001600160401b03166001600160401b03196001541617600155565b6001546001600160401b031698610d26611bd0565b610d3190898c611497565b610d3c90888c611556565b610d4790868c611603565b610d5290878c61168f565b92610d5d948b611846565b610d668661193c565b6001546001600160401b031692610d7c94611303565b91906104636001600055565b604051637d45bbc360e01b8152600490fd5b50865115610c5c565b508a5115610c55565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03809116908114610dda5760010190565b610dac565b60405190610dec826103c7565b60006040838281528260208201520152565b906004811015610c335760051b0190565b805490600160401b8210156103e25760018201808255821015610c335760005260206000200155565b91610e5e906001600160401b036104d29593168452606060208501526060840190610164565b916040818403910152610164565b9094939293600554820361109257610e83916119d3565b600493610e986004546001600160401b031690565b93610ea56100c0866109ff565b93610ec0610eb1610456565b6001600160a01b039094168452565b6001600160a01b03909316602083810191909152926001600160a01b03909116604083810191909152906001600160a01b031660608381019190915260005b878110610f215750506004805460ff60401b1916905550610463945050505050565b80610f4d610f41610f3460019488610dfe565b516001600160a01b031690565b6001600160a01b031690565b610f58575b01610eff565b610f8d610f85610f6b610f348489610dfe565b6001600160a01b0316600090815260036020526040902090565b885190610e0f565b610fa58751610f9f610f348489610dfe565b90611d77565b610fba6080880151610f9f610f348489610dfe565b610fcf60a0880151610f9f610f348489610dfe565b610fe460c0880151610f9f610f348489610dfe565b610ffa610100880151610f9f610f348489610dfe565b611010610140880151610f9f610f348489610dfe565b611026610160880151610f9f610f348489610dfe565b61103c610180880151610f9f610f348489610dfe565b877ffe94e820d25f0404de4c2f3392907d10954650d2223d284943496249ba9ecaa561106b610f348489610dfe565b888a01519061108a878c01518951938493898060a01b03169684610e38565b0390a2610f52565b6040516302e8145360e61b8152600490fd5b60206110df9160018060a01b036000805160206123ec833981519152541660405180809581946382027b6d60e01b8352339060048401611ad0565b03915afa90811561111e576000916110f5575090565b6104d2915060203d602011611117575b61110f8183610415565b810190611ab8565b503d611105565b611ae9565b600260005414611134576002600055565b604051633ee5aeb560e01b8152600490fd5b6104d23082611d77565b906104d2918015611171575b81611dd657905061116b611c7c565b90611dd6565b5061117a611c7c565b61115c565b90811561121f575b801561120d575b602090606460018060a01b0360008051602061240c8339815191525416936000604051958694859363d99882d560e01b8552600485015260248401528160448401525af190811561111e576000916111e4575090565b6104d2915060203d602011611206575b6111fe8183610415565b810190611af5565b503d6111f4565b506020611218611cd2565b905061118e565b9050611229611cd2565b90611187565b9081156112a6575b8015611294575b602090606460018060a01b0360008051602061240c8339815191525416936000604051958694859363022f65e760e31b8552600485015260248401528160448401525af190811561111e576000916111e4575090565b50602061129f611bd0565b905061123e565b90506112b0611bd0565b90611237565b906104d29180156112d1575b81611dd657905061116b611bd0565b506112da611bd0565b6112c2565b805160031015610c335760800190565b8051821015610c335760209160051b010190565b906040519160a083018381106001600160401b038211176103e25760405260048352602083016080368237835115610c335752815160011015610c33576040820152805160021015610c33576113889261136b926060830152611365826112df565b526121ad565b916001600160401b03166001600160401b03196004541617600455565b6004805460ff60401b1916600160401b1790556104d281600555565b60008051602061240c833981519152546113ed926020916113cf90610f41906001600160a01b031681565b92604051948592839263196d0b9b60e01b8452339060048501611ed1565b0381600080955af191821561111e578192611476575b506000805160206123ec8339815191525461142890610f41906001600160a01b031681565b90813b1561076a57604051630f8e573b60e21b8152918290818381611451338960048401611ad0565b03925af1801561111e57611463575090565b806114706104d2926103e7565b80610689565b61149091925060203d602011611206576111fe8183610415565b9038611403565b9161151c906115166104d2936114ab611bd0565b906115116114b7611b7a565b916114c0611c7c565b9089600b6114cc611cd2565b6114d4611cd2565b906114fb604051946114e5866103c7565b86865260208601928352604086019384526109ff565b9351600985015551600a84015551910155611f02565b611e7c565b9061122f565b91611534600961152b836109ff565b01543090611d77565b61154a30600a611543846109ff565b0154611d77565b600b61154330926109ff565b916115d9906115166104d29361156a611bd0565b90611511611576611b7a565b9161157f611c7c565b906115d461158b611cd2565b611593611cd2565b604051916115a0836103c7565b84835260208301526040820152600c6115b88d6109ff565b0190604060029180518455602081015160018501550151910155565b611f02565b916115e8600c61152b836109ff565b6115f730600d611543846109ff565b600e61154330926109ff565b91611665906115166104d293611617611bd0565b90611511611623611b7a565b9161162c611c7c565b906115d4611638611cd2565b611640611cd2565b6040519161164d836103c7565b84835260208301526040820152600f6115b88d6109ff565b91611674600f61152b836109ff565b611683306010611543846109ff565b601161154330926109ff565b916116f1906115166104d2936116a3611bd0565b906115116116af611b7a565b916116b8611c7c565b906115d46116c4611cd2565b6116cc611cd2565b604051916116d9836103c7565b8483526020830152604082015260126115b88d6109ff565b91611700601261152b836109ff565b61170f306013611543846109ff565b601461154330926109ff565b90601f811161172957505050565b6000916000526020600020906020601f850160051c83019410611767575b601f0160051c01915b82811061175c57505050565b818155600101611750565b9092508290611747565b91909182516001600160401b0381116103e257611798816117928454610a18565b8461171b565b602080601f83116001146117db575081906117cc9394956000926117d0575b50508160011b916000199060031b1c19161790565b9055565b0151905038806117b7565b90601f198316956117f185600052602060002090565b926000905b88821061182e57505083600195969710611815575b505050811b019055565b015160001960f88460031b161c1916905538808061180b565b806001859682949686015181550195019301906117f6565b949361189d906118926118ba9493956118876001600160401b039561186c878c16611c26565b6118758c6109ff565b5560016118818c6109ff565b01611771565b60026118818a6109ff565b6003611881886109ff565b6118a633611b24565b60046118b1876109ff565b01554216611c26565b60056118c5856109ff565b015560056118d2846109ff565b015460066118df856109ff565b015560076118ec846109ff565b01556118f6611cd2565b6008611901846109ff565b0155601561190e836109ff565b0155611918611bd0565b6016611923836109ff565b01556017611938611932611bd0565b926109ff565b0155565b6119cb6104639161195561194f826109ff565b54611146565b5061196b6004611964836109ff565b0154611146565b5061197a6005611964836109ff565b506119896006611964836109ff565b506119986008611964836109ff565b506119a76015611964836109ff565b506119b66016611964836109ff565b506119c56017611964836109ff565b506109ff565b543390611d77565b906000908282527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260209080602052604084205415611aa657848452602052604083206040519182602083549182815201928652602086209186905b828210611a8f57505050509181611a4e6100d293611a53950382610415565b612076565b611a7d57807f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d91a2565b60405163cf6c44e960e01b8152600490fd5b835485529384019360019384019390910190611a2f565b60405163d66ca67560e01b8152600490fd5b9081602091031261013d5751801515810361013d5790565b9081526001600160a01b03909116602082015260400190565b6040513d6000823e3d90fd5b9081602091031261013d575190565b60541115611b0e57565b634e487b7160e01b600052602160045260246000fd5b60008051602061240c83398151915254604051639cd07acb60e01b8152600481019290925260076024830152602090829060449082906000906001600160a01b03165af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051639cd07acb60e01b8152600160048201526002602482015290602090829060449082906000906001600160a01b03165af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051639cd07acb60e01b8152600060048201819052600260248301529091602091839160449183916001600160a01b03165af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051639cd07acb60e01b8152600481019290925260056024830152602090829060449082906000906001600160a01b03165af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051639cd07acb60e01b8152600060048201819052600760248301529091602091839160449183916001600160a01b03165af190811561111e576000916111e4575090565b6000602060018060a01b0360008051602061240c8339815191525416604460405180948193639cd07acb60e01b83528160048401528160248401525af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051639cd07acb60e01b8152600160048201526000602482018190529091602091839160449183916001600160a01b03165af190811561111e576000916111e4575090565b6000805160206123ec833981519152546001600160a01b031691823b1561013d57611dbc9260009283604051809681958294635ca4b5b160e11b845260048401611ad0565b03925af1801561111e57611dcd5750565b610463906103e7565b90602090606460018060a01b0360008051602061240c8339815191525416936000604051958694859363f77f3f1d60e01b8552600485015260248401528160448401525af190811561111e576000916111e4575090565b60008051602061240c83398151915254604051630f51ccfb60e41b81526004810192909252602090829060249082906000906001600160a01b03165af190811561111e576000916111e4575090565b906064602092600060018060a01b0360008051602061240c83398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af190811561111e576000916111e4575090565b9392611efd90600793606093875260018060a01b03166020870152608060408701526080860190610164565b930152565b908115611f79575b8015611f67575b602090606460018060a01b0360008051602061240c833981519152541693600060405195869485936336024b2f60e21b8552600485015260248401528160448401525af190811561111e576000916111e4575090565b506020611f72611c7c565b9050611f11565b9050611f83611c7c565b90611f0a565b90611f9382610465565b611fa06040519182610415565b8281528092611fb1601f1991610465565b0190602036910137565b90815180825260208080930193019160005b828110611fdb575050505090565b835185529381019392810192600101611fcd565b919061200661201591606085526060850190611fbb565b60209284820384860152610164565b9160408184039101528251908183528083019281808460051b8301019501936000915b8483106120485750505050505090565b9091929394958480612066600193601f198682030187528a51610164565b9801930193019194939290612038565b80516000906000905b808210612115575050916020916120986120ff94612306565b6120a181611f89565b906024858301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea602546000906120e190610f41906001600160a01b031681565b9260405196879586948593632c027b1360e21b855260048501611fef565b03925af190811561111e576000916110f5575090565b9091600961212384866112ef565b51601e1a61213081611b04565b61213981611b04565b10156121525761214a600191612306565b92019061207f565b60405163ce54a8d160e01b8152600490fd5b9060206104d2928181520190611fbb565b929161218e918452606060208501526060840190611fbb565b91604063c48c3fbd60e01b910152565b6000198114610dda5760010190565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0180546000805160206123ec8339815191525490939291906121f990610f41906001600160a01b031681565b90813b1561013d57604051637d6e912360e11b8152600092839082908183816122258a60048301612164565b03925af1801561111e576122f3575b507f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d005461226b90610f41906001600160a01b031681565b91823b1561076a57604051633263b83b60e01b8152928390818381612294898c60048401612175565b03925af1801561111e57610463936122bc936122b6926122e0575b5086612314565b5461219e565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0155565b806114706122ed926103e7565b386122af565b80611470612300926103e7565b38612234565b9060208201809211610dda57565b60008181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d026020928160205260408320546123d957825260205260408120918351936001600160401b0385116103e257600160401b85116103e25783548585558086106123b3575b506020612391910193600052602060002090565b915b8481106123a1575050505050565b83518382015592810192600101612393565b848452856020852091820191015b8181106123ce575061237d565b8481556001016123c1565b604051633f06d22b60e01b8152600490fdfeed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601a26469706673582212203cce00ba98659200e30bd0d96e0d84312ba4d3cd108ef2e40a01c5cf959ffd3d64736f6c63430008180033";

type Enterprises_ContractsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Enterprises_ContractsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Enterprises_Contracts__factory extends ContractFactory {
  constructor(...args: Enterprises_ContractsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Enterprises_Contracts & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Enterprises_Contracts__factory {
    return super.connect(runner) as Enterprises_Contracts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Enterprises_ContractsInterface {
    return new Interface(_abi) as Enterprises_ContractsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Enterprises_Contracts {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Enterprises_Contracts;
  }
}
